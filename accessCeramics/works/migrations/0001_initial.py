# Generated by Django 2.0.5 on 2018-05-28 23:09

from django.conf import settings
from django.db import migrations, models
import django_measurement.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PyrometricCone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='500 characters maximum.', max_length=500)),
                ('date', models.PositiveSmallIntegerField(help_text='Use YYYY format.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, help_text="A description of the work or artist's statement.", null=True)),
                ('firing_temperature', django_measurement.models.MeasurementField(blank=True, measurement_class='Temperature', null=True)),
                ('height', django_measurement.models.MeasurementField(blank=True, measurement_class='Distance', null=True)),
                ('width', django_measurement.models.MeasurementField(blank=True, measurement_class='Distance', null=True)),
                ('depth', django_measurement.models.MeasurementField(blank=True, measurement_class='Distance', null=True)),
                ('creators', models.ManyToManyField(help_text='Must be an extant accessCeramics user.', to=settings.AUTH_USER_MODEL)),
                ('materials', models.ManyToManyField(blank=True, to='works.Material')),
                ('pyrometric_cones', models.ManyToManyField(blank=True, to='works.PyrometricCone')),
                ('techniques', models.ManyToManyField(blank=True, to='works.Technique')),
            ],
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='work',
            name='work_types',
            field=models.ManyToManyField(blank=True, to='works.WorkType'),
        ),
    ]
